#!/usr/bin/env python3
from sea_ice_rs.install import install

install()

import argparse
import os
import sys
import pandas as pd
from sklearn.preprocessing import MinMaxScaler
from sea_ice_rs.utils import decompose_filepath

"""Transform features to a range (0,1)"""


def main(args):
    if os.path.isfile(args.input) == False or os.path.isfile(args.std_data) == False:
        print("File(s) not existing", file=sys.stderr)
        sys.exit(1)

    tr_df = pd.read_csv(args.std_data)

    minimums = {col: tr_df[col].min() for col in tr_df.columns if col != "label"}
    maximums = {col: tr_df[col].max() for col in tr_df.columns if col != "label"}

    decomposed = decompose_filepath(args.input)

    df = pd.read_csv(args.input)

    for col in df.columns:
        if col == "label":
            continue
        df[col] = (df[col] - minimums[col]) / (maximums[col] - minimums[col])

    out = decomposed[0] + "/" + decomposed[1] + "_norm.csv"

    df.to_csv(out, index=False)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument("--input", type=str, help="Path of dataset to be normalized")
    parser.add_argument(
        "--std-data", type=str, help="Dataset that provides normalization standard"
    )

    args = parser.parse_args()
    main(args)
