#!/usr/bin/env python3
from sea_ice_rs.install import install

install()

import argparse
import os
import csv
import random
from multiprocessing import Process
from sea_ice_rs.utils import decompose_filepath
from sea_ice_rs.data_processing import (
    sampling,
    sampling_probability,
    patch_location_map,
)


def main(args):
    prob_dict = sampling_probability(args.dist)
    patch_loc_dict = patch_location_map(args.patch_loc)

    parent_dir = decompose_filepath(decompose_filepath(args.images)[0])[0]

    try:
        os.mkdir(f"{parent_dir}/train_dataset")
    except FileExistsError:
        None

    try:
        os.mkdir(f"{parent_dir}/test_dataset")
    except FileExistsError:
        None

    tr_dataset = open(f"{parent_dir}/train_dataset/raw.csv", "w", newline="")
    te_dataset = open(f"{parent_dir}/test_dataset/raw.csv", "w", newline="")
    tr_writer = csv.writer(tr_dataset)
    te_writer = csv.writer(te_dataset)

    images = os.listdir(args.images)
    random.shuffle(images)
    split_threshold = int(len(images) * 0.8)
    tr_images = images[:split_threshold]
    te_images = images[split_threshold:]

    sampling(
        tr_images,
        tr_writer,
        args.images,
        args.masks,
        prob_dict,
        patch_loc_dict,
        0,
    )

    images = os.listdir(args.images)
    sampling(
        te_images,
        te_writer,
        args.images,
        args.masks,
        prob_dict,
        patch_loc_dict,
        0,
    )


if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument("--images", type=str, help="Images directory path")
    parser.add_argument("--masks", type=str, help="Masks directory path")
    parser.add_argument("--dist", type=str, help="Distribution statistics CSV file")
    parser.add_argument(
        "--patch-loc", type=str, help="Patch locations ((X, Y) coordinates) CSV file"
    )

    args = parser.parse_args()
    main(args)
